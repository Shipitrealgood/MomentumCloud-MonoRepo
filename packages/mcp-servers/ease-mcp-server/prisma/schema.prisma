// packages/mcp-servers/ease-mcp-server/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  output = "generated/client"
}

datasource db {
  provider = "postgresql"
  url = env("EASE_DATABASE_URL")
}

model CensusTemplate {
  id String @id @default(cuid())
  templateKey String @unique
  name String
  description String?
  fields CensusTemplateField[]
}

model CensusTemplateField {
  id String @id @default(cuid())
  columnName String
  mapsToField String
  isRequired Boolean @default(false)
  template CensusTemplate @relation(fields: [templateId], references: [id])
  templateId String
}

model Company {
  id String @id @default(cuid())
  name String @unique
  employees Employee[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id String @id @default(cuid())
  eid String?
  firstName String
  middleName String?
  lastName String
  ssn String?
  birthDate DateTime?
  gender String?
  maritalStatus String?
  email String?
  personalEmail String?
  address1 String?
  address2 String?
  city String?
  state String?
  zipCode String?
  county String?
  personalPhone String?
  workPhone String?
  mobilePhone String?
  hireDate DateTime?
  terminationDate DateTime?
  employmentType String?
  status String?
  jobTitle String?
  payCycle String?
  compensationAmount Decimal?
  compensationType String?
  scheduledHours Float?

  // --- NEW FIELDS ---
  enrollmentStatus  String?    // From "Enrollment Status"
  signatureDate     DateTime?
  lastLoginDate     DateTime?
  benefitEligibleDate DateTime?
  // --- END OF NEW FIELDS ---

  company Company @relation(fields: [companyId], references: [id])
  companyId String
  dependents Dependent[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([companyId, eid]) // Composite key for uniqueness
}

model Dependent {
  id String @id @default(cuid())
  eid String
  firstName String
  middleName String?
  lastName String
  ssn String? @unique
  birthDate DateTime?
  gender String?
  relationship String
  employee Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([employeeId, firstName, lastName, relationship]) // Composite key for uniqueness
}