import { PrismaClient } from '../prisma/generated/client/index.js';

const prisma = new PrismaClient();

// This object defines the structure of a full census file from Ease.
// It maps the column header in the CSV to our internal database field name.
const fullCensusTemplate = {
  templateKey: 'ease-full-census',
  name: 'Ease Full Employee Census',
  description: 'The standard, comprehensive employee and dependent census file generated by Ease.',
  fields: [
    { columnName: 'EID', mapsToField: 'eid', isRequired: true },
    { columnName: 'First Name', mapsToField: 'firstName', isRequired: true },
    { columnName: 'Last Name', mapsToField: 'lastName', isRequired: true },
    { columnName: 'Middle Name', mapsToField: 'middleName', isRequired: false },
    { columnName: 'Relationship', mapsToField: 'relationship', isRequired: true },
    { columnName: 'SSN', mapsToField: 'ssn', isRequired: false },
    { columnName: 'Birth Date', mapsToField: 'birthDate', isRequired: false },
    { columnName: 'Sex', mapsToField: 'gender', isRequired: false },
    { columnName: 'Marital Status', mapsToField: 'maritalStatus', isRequired: false },
    { columnName: 'Email', mapsToField: 'email', isRequired: false },
    { columnName: 'Personal Email', mapsToField: 'personalEmail', isRequired: false },
    { columnName: 'Address 1', mapsToField: 'address1', isRequired: false },
    { columnName: 'Address 2', mapsToField: 'address2', isRequired: false },
    { columnName: 'City', mapsToField: 'city', isRequired: false },
    { columnName: 'State', mapsToField: 'state', isRequired: false },
    { columnName: 'Zip Code', mapsToField: 'zipCode', isRequired: false },
    { columnName: 'County', mapsToField: 'county', isRequired: false },
    { columnName: 'Personal Phone', mapsToField: 'personalPhone', isRequired: false },
    { columnName: 'Work Phone', mapsToField: 'workPhone', isRequired: false },
    { columnName: 'Mobile Phone', mapsToField: 'mobilePhone', isRequired: false },
    { columnName: 'Hire Date', mapsToField: 'hireDate', isRequired: false },
    { columnName: 'Termination Date', mapsToField: 'terminationDate', isRequired: false },
    { columnName: 'Employment Type', mapsToField: 'employmentType', isRequired: false },
    { columnName: 'Status', mapsToField: 'status', isRequired: false },
    { columnName: 'Job Title', mapsToField: 'jobTitle', isRequired: false },
  ]
};

// --- NEW TEMPLATE DEFINITION ---
const enrollmentProgressTemplate = {
    templateKey: 'ease-enrollment-progress',
    name: 'Ease Enrollment Progress',
    description: 'Shows the progress of employees going through enrollment and includes their Ease status.',
    fields: [
        { columnName: 'EID', mapsToField: 'eid', isRequired: true },
        { columnName: 'Enrollment Status', mapsToField: 'enrollmentStatus', isRequired: false },
        { columnName: 'Signature Date', mapsToField: 'signatureDate', isRequired: false },
        { columnName: 'Last Login Date', mapsToField: 'lastLoginDate', isRequired: false },
        { columnName: 'Benefit Eligible Date', mapsToField: 'benefitEligibleDate', isRequired: false },
    ]
};
// --- END OF NEW TEMPLATE ---


async function main() {
  console.log('Seeding census templates into the database...');

  await prisma.censusTemplate.upsert({
    where: { templateKey: fullCensusTemplate.templateKey },
    update: {},
    create: {
      templateKey: fullCensusTemplate.templateKey,
      name: fullCensusTemplate.name,
      description: fullCensusTemplate.description,
      fields: {
        create: fullCensusTemplate.fields,
      },
    },
  });

  // --- UPSERT THE NEW TEMPLATE ---
  await prisma.censusTemplate.upsert({
    where: { templateKey: enrollmentProgressTemplate.templateKey },
    update: {},
    create: {
        templateKey: enrollmentProgressTemplate.templateKey,
        name: enrollmentProgressTemplate.name,
        description: enrollmentProgressTemplate.description,
        fields: {
            create: enrollmentProgressTemplate.fields,
        },
    },
  });
  // --- END OF UPSERT ---

  console.log('âœ… Census template seeding complete.');
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });